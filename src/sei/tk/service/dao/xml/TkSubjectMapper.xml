<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sei.tk.service.dao.mapper.TkSubjectMapper" >
  <resultMap id="BaseResultMap" type="sei.tk.service.dao.model.TkSubject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    <id column="subject_id" property="subjectId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="SMALLINT" />
    <result column="knopoint_id" property="knopointId" jdbcType="BIGINT" />
    <result column="quetype_id" property="quetypeId" jdbcType="SMALLINT" />
    <result column="chapter_id" property="chapterId" jdbcType="TINYINT" />
    <result column="level_id" property="levelId" jdbcType="TINYINT" />
    <result column="subject_answer" property="subjectAnswer" jdbcType="VARCHAR" />
    <result column="ppassport_id" property="ppassportId" jdbcType="BIGINT" />
    <result column="ppassport_time" property="ppassportTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithSubNum" type="sei.tk.service.dao.model.vo.robot.SubNum" >
    <result column="level_id" property="levelId" jdbcType="TINYINT" />
    <result column="knopoint_id" property="knopointId" jdbcType="BIGINT" />
    <result column="quetype_id" property="quetypeId" jdbcType="SMALLINT" />
    <result column="COUNT(subject_id)" property="num" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="sei.tk.service.dao.model.TkSubjectWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    <result column="subject_name" property="subjectName" jdbcType="LONGVARCHAR" />
    <result column="subject_option" property="subjectOption" jdbcType="LONGVARCHAR" />
    <result column="subject_solution" property="subjectSolution" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    subject_id, course_id, knopoint_id, quetype_id, chapter_id, level_id, subject_answer,
    ppassport_id, ppassport_time
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    subject_name, subject_option, subject_solution
  </sql>
  <select id="selectSubOrderBy" resultMap="ResultMapWithBLOBs" parameterType="sei.tk.service.dao.model.TkSubjectExample">
    <!--SELECT * from tk_subject WHERE subject_id = #{subjectId},course_id = #{courseId} ORDER BY chapter_id,knopoint_id,
    quetype_id-->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tk_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by chapter_id,knopoint_id,quetype_id
    </if>
  </select>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="sei.tk.service.dao.model.TkSubjectExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tk_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null">
      <if test="row != null">
        limit #{start},#{row}
      </if>
    </if>
  </select>
  <select id="selectByKnpoint" resultMap="ResultMapWithBLOBs" >
    select
    distinct
    *
    from tk_subject st
    <trim prefix="where" prefixOverrides="AND|OR">
      <if test="course_id != null" >
        st.course_id=#{course_id}
      </if>
      <if test="chapter_id !=null">
        AND st.chapter_id=#{chapter_id}
      </if>
      <if test="knopoint_id != null" >
        AND st.knopoint_id=#{knopoint_id}
      </if>
      <if test="level_id != null" >
        AND st.level_id=#{level_id}
      </if>
      <if test="quetype_id != null" >
        AND st.quetype_id=#{quetype_id}
      </if>

    </trim>
  </select>

  <select id="selectSubs" resultMap="ResultMapWithBLOBs" parameterType="sei.tk.service.dao.model.TkSubjectExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    select *
    from tk_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    GROUP by course_id,knopoint_id,quetype_id
    <if test="start != null">
      <if test="row != null">
        limit #{start},#{row}
      </if>
    </if>
  </select>


  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sei.tk.service.dao.model.TkSubjectExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tk_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null">
      <if test="row != null">
        limit #{start},#{row}
      </if>
    </if>
  </select>

  <!--

     查找随机取的题
     -->
  <select id="selectRandSubject" resultMap="BaseResultMap" parameterType="sei.tk.service.dao.model.vo.robot.Question">
    SELECT subject_id,quetype_id from tk_subject  WHERE course_id=#{courseId} and knopoint_id=#{knopointId} and  level_id=#{levelId} and quetype_id=#{quetypeId}
    limit #{amount},1

  </select>
  <!--
     通过课程id,题型id，知识点id 得到该题型该知识点每种难度的题目数
  -->
  <select id="selectandGetNum" resultMap="ResultMapWithSubNum" parameterType="sei.tk.service.dao.model.TkSubject">
    SELECT quetype_id ,knopoint_id ,level_id  ,COUNT(subject_id)  FROM tk_subject WHERE course_id= #{courseId,jdbcType=SMALLINT} AND knopoint_id=#{knopointId,jdbcType=BIGINT}
     AND quetype_id=#{quetypeId,jdbcType=SMALLINT}  GROUP BY quetype_id,knopoint_id,level_id;

  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tk_subject
    where subject_id = #{subjectId,jdbcType=BIGINT}
  </select>
  <select id="selectChapterGroup" resultMap="BaseResultMap" parameterType="java.lang.Short">
    select
    chapter_id
    from tk_subject
    GROUP by course_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    delete from tk_subject
    where subject_id = #{subjectId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="sei.tk.service.dao.model.TkSubjectExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    delete from tk_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sei.tk.service.dao.model.TkSubjectWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    insert into tk_subject (subject_id, course_id, knopoint_id,
    quetype_id, chapter_id, level_id,
    subject_answer, ppassport_id, ppassport_time,
    subject_name, subject_option, subject_solution
    )
    values (#{subjectId,jdbcType=BIGINT}, #{courseId,jdbcType=SMALLINT}, #{knopointId,jdbcType=BIGINT},
    #{quetypeId,jdbcType=SMALLINT}, #{chapterId,jdbcType=TINYINT}, #{levelId,jdbcType=TINYINT},
    #{subjectAnswer,jdbcType=VARCHAR}, #{ppassportId,jdbcType=BIGINT}, #{ppassportTime,jdbcType=TIMESTAMP},
    #{subjectName,jdbcType=LONGVARCHAR}, #{subjectOption,jdbcType=LONGVARCHAR}, #{subjectSolution,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="sei.tk.service.dao.model.TkSubjectWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    insert into tk_subject
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="knopointId != null" >
        knopoint_id,
      </if>
      <if test="quetypeId != null" >
        quetype_id,
      </if>
      <if test="chapterId != null" >
        chapter_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="subjectAnswer != null" >
        subject_answer,
      </if>
      <if test="ppassportId != null" >
        ppassport_id,
      </if>
      <if test="ppassportTime != null" >
        ppassport_time,
      </if>
      <if test="subjectName != null" >
        subject_name,
      </if>
      <if test="subjectOption != null" >
        subject_option,
      </if>
      <if test="subjectSolution != null" >
        subject_solution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subjectId != null" >
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=SMALLINT},
      </if>
      <if test="knopointId != null" >
        #{knopointId,jdbcType=BIGINT},
      </if>
      <if test="quetypeId != null" >
        #{quetypeId,jdbcType=SMALLINT},
      </if>
      <if test="chapterId != null" >
        #{chapterId,jdbcType=TINYINT},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=TINYINT},
      </if>
      <if test="subjectAnswer != null" >
        #{subjectAnswer,jdbcType=VARCHAR},
      </if>
      <if test="ppassportId != null" >
        #{ppassportId,jdbcType=BIGINT},
      </if>
      <if test="ppassportTime != null" >
        #{ppassportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectName != null" >
        #{subjectName,jdbcType=LONGVARCHAR},
      </if>
      <if test="subjectOption != null" >
        #{subjectOption,jdbcType=LONGVARCHAR},
      </if>
      <if test="subjectSolution != null" >
        #{subjectSolution,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sei.tk.service.dao.model.TkSubjectExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    select count(*) from tk_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    update tk_subject
    <set >
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=SMALLINT},
      </if>
      <if test="record.knopointId != null" >
        knopoint_id = #{record.knopointId,jdbcType=BIGINT},
      </if>
      <if test="record.quetypeId != null" >
        quetype_id = #{record.quetypeId,jdbcType=SMALLINT},
      </if>
      <if test="record.chapterId != null" >
        chapter_id = #{record.chapterId,jdbcType=TINYINT},
      </if>
      <if test="record.levelId != null" >
        level_id = #{record.levelId,jdbcType=TINYINT},
      </if>
      <if test="record.subjectAnswer != null" >
        subject_answer = #{record.subjectAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.ppassportId != null" >
        ppassport_id = #{record.ppassportId,jdbcType=BIGINT},
      </if>
      <if test="record.ppassportTime != null" >
        ppassport_time = #{record.ppassportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subjectName != null" >
        subject_name = #{record.subjectName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.subjectOption != null" >
        subject_option = #{record.subjectOption,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.subjectSolution != null" >
        subject_solution = #{record.subjectSolution,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    update tk_subject
    set subject_id = #{record.subjectId,jdbcType=BIGINT},
    course_id = #{record.courseId,jdbcType=SMALLINT},
    knopoint_id = #{record.knopointId,jdbcType=BIGINT},
    quetype_id = #{record.quetypeId,jdbcType=SMALLINT},
    chapter_id = #{record.chapterId,jdbcType=TINYINT},
    level_id = #{record.levelId,jdbcType=TINYINT},
    subject_answer = #{record.subjectAnswer,jdbcType=VARCHAR},
    ppassport_id = #{record.ppassportId,jdbcType=BIGINT},
    ppassport_time = #{record.ppassportTime,jdbcType=TIMESTAMP},
    subject_name = #{record.subjectName,jdbcType=LONGVARCHAR},
    subject_option = #{record.subjectOption,jdbcType=LONGVARCHAR},
    subject_solution = #{record.subjectSolution,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    update tk_subject
    set subject_id = #{record.subjectId,jdbcType=BIGINT},
    course_id = #{record.courseId,jdbcType=SMALLINT},
    knopoint_id = #{record.knopointId,jdbcType=BIGINT},
    quetype_id = #{record.quetypeId,jdbcType=SMALLINT},
    chapter_id = #{record.chapterId,jdbcType=TINYINT},
    level_id = #{record.levelId,jdbcType=TINYINT},
    subject_answer = #{record.subjectAnswer,jdbcType=VARCHAR},
    ppassport_id = #{record.ppassportId,jdbcType=BIGINT},
    ppassport_time = #{record.ppassportTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sei.tk.service.dao.model.TkSubjectWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    update tk_subject
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=SMALLINT},
      </if>
      <if test="knopointId != null" >
        knopoint_id = #{knopointId,jdbcType=BIGINT},
      </if>
      <if test="quetypeId != null" >
        quetype_id = #{quetypeId,jdbcType=SMALLINT},
      </if>
      <if test="chapterId != null" >
        chapter_id = #{chapterId,jdbcType=TINYINT},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=TINYINT},
      </if>
      <if test="subjectAnswer != null" >
        subject_answer = #{subjectAnswer,jdbcType=VARCHAR},
      </if>
      <if test="ppassportId != null" >
        ppassport_id = #{ppassportId,jdbcType=BIGINT},
      </if>
      <if test="ppassportTime != null" >
        ppassport_time = #{ppassportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectName != null" >
        subject_name = #{subjectName,jdbcType=LONGVARCHAR},
      </if>
      <if test="subjectOption != null" >
        subject_option = #{subjectOption,jdbcType=LONGVARCHAR},
      </if>
      <if test="subjectSolution != null" >
        subject_solution = #{subjectSolution,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where subject_id = #{subjectId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="sei.tk.service.dao.model.TkSubjectWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    update tk_subject
    set course_id = #{courseId,jdbcType=SMALLINT},
    knopoint_id = #{knopointId,jdbcType=BIGINT},
    quetype_id = #{quetypeId,jdbcType=SMALLINT},
    chapter_id = #{chapterId,jdbcType=TINYINT},
    level_id = #{levelId,jdbcType=TINYINT},
    subject_answer = #{subjectAnswer,jdbcType=VARCHAR},
    ppassport_id = #{ppassportId,jdbcType=BIGINT},
    ppassport_time = #{ppassportTime,jdbcType=TIMESTAMP},
    subject_name = #{subjectName,jdbcType=LONGVARCHAR},
    subject_option = #{subjectOption,jdbcType=LONGVARCHAR},
    subject_solution = #{subjectSolution,jdbcType=LONGVARCHAR}
    where subject_id = #{subjectId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="sei.tk.service.dao.model.TkSubject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 25 11:11:47 CST 2016.
    -->
    update tk_subject
    set course_id = #{courseId,jdbcType=SMALLINT},
    knopoint_id = #{knopointId,jdbcType=BIGINT},
    quetype_id = #{quetypeId,jdbcType=SMALLINT},
    chapter_id = #{chapterId,jdbcType=TINYINT},
    level_id = #{levelId,jdbcType=TINYINT},
    subject_answer = #{subjectAnswer,jdbcType=VARCHAR},
    ppassport_id = #{ppassportId,jdbcType=BIGINT},
    ppassport_time = #{ppassportTime,jdbcType=TIMESTAMP}
    where subject_id = #{subjectId,jdbcType=BIGINT}
  </update>
</mapper>