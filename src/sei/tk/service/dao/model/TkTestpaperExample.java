package sei.tk.service.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TkTestpaperExample {
    protected Integer start;    //∑÷“≥œ‡πÿ
    protected Integer row;

    public Integer getStart() {
        return start;
    }

    public void setStart(Integer start) {
        this.start = start;
    }

    public Integer getRow() {
        return row;
    }

    public void setRow(Integer row) {
        this.row = row;
    }

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public TkTestpaperExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTestpaperIdIsNull() {
            addCriterion("testpaper_id is null");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdIsNotNull() {
            addCriterion("testpaper_id is not null");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdEqualTo(Long value) {
            addCriterion("testpaper_id =", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdNotEqualTo(Long value) {
            addCriterion("testpaper_id <>", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdGreaterThan(Long value) {
            addCriterion("testpaper_id >", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdGreaterThanOrEqualTo(Long value) {
            addCriterion("testpaper_id >=", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdLessThan(Long value) {
            addCriterion("testpaper_id <", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdLessThanOrEqualTo(Long value) {
            addCriterion("testpaper_id <=", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdIn(List<Long> values) {
            addCriterion("testpaper_id in", values, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdNotIn(List<Long> values) {
            addCriterion("testpaper_id not in", values, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdBetween(Long value1, Long value2) {
            addCriterion("testpaper_id between", value1, value2, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdNotBetween(Long value1, Long value2) {
            addCriterion("testpaper_id not between", value1, value2, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdIsNull() {
            addCriterion("mkpaper_id is null");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdIsNotNull() {
            addCriterion("mkpaper_id is not null");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdEqualTo(Long value) {
            addCriterion("mkpaper_id =", value, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdNotEqualTo(Long value) {
            addCriterion("mkpaper_id <>", value, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdGreaterThan(Long value) {
            addCriterion("mkpaper_id >", value, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdGreaterThanOrEqualTo(Long value) {
            addCriterion("mkpaper_id >=", value, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdLessThan(Long value) {
            addCriterion("mkpaper_id <", value, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdLessThanOrEqualTo(Long value) {
            addCriterion("mkpaper_id <=", value, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdIn(List<Long> values) {
            addCriterion("mkpaper_id in", values, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdNotIn(List<Long> values) {
            addCriterion("mkpaper_id not in", values, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdBetween(Long value1, Long value2) {
            addCriterion("mkpaper_id between", value1, value2, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andMkpaperIdNotBetween(Long value1, Long value2) {
            addCriterion("mkpaper_id not between", value1, value2, "mkpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeIsNull() {
            addCriterion("testpaper_type is null");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeIsNotNull() {
            addCriterion("testpaper_type is not null");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeEqualTo(Boolean value) {
            addCriterion("testpaper_type =", value, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeNotEqualTo(Boolean value) {
            addCriterion("testpaper_type <>", value, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeGreaterThan(Boolean value) {
            addCriterion("testpaper_type >", value, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("testpaper_type >=", value, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeLessThan(Boolean value) {
            addCriterion("testpaper_type <", value, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeLessThanOrEqualTo(Boolean value) {
            addCriterion("testpaper_type <=", value, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeIn(List<Boolean> values) {
            addCriterion("testpaper_type in", values, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeNotIn(List<Boolean> values) {
            addCriterion("testpaper_type not in", values, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeBetween(Boolean value1, Boolean value2) {
            addCriterion("testpaper_type between", value1, value2, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andTestpaperTypeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("testpaper_type not between", value1, value2, "testpaperType");
            return (Criteria) this;
        }

        public Criteria andPpassportIdIsNull() {
            addCriterion("ppassport_id is null");
            return (Criteria) this;
        }

        public Criteria andPpassportIdIsNotNull() {
            addCriterion("ppassport_id is not null");
            return (Criteria) this;
        }

        public Criteria andPpassportIdEqualTo(Long value) {
            addCriterion("ppassport_id =", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdNotEqualTo(Long value) {
            addCriterion("ppassport_id <>", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdGreaterThan(Long value) {
            addCriterion("ppassport_id >", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ppassport_id >=", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdLessThan(Long value) {
            addCriterion("ppassport_id <", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdLessThanOrEqualTo(Long value) {
            addCriterion("ppassport_id <=", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdIn(List<Long> values) {
            addCriterion("ppassport_id in", values, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdNotIn(List<Long> values) {
            addCriterion("ppassport_id not in", values, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdBetween(Long value1, Long value2) {
            addCriterion("ppassport_id between", value1, value2, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdNotBetween(Long value1, Long value2) {
            addCriterion("ppassport_id not between", value1, value2, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeIsNull() {
            addCriterion("ppassport_time is null");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeIsNotNull() {
            addCriterion("ppassport_time is not null");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeEqualTo(Date value) {
            addCriterion("ppassport_time =", value, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeNotEqualTo(Date value) {
            addCriterion("ppassport_time <>", value, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeGreaterThan(Date value) {
            addCriterion("ppassport_time >", value, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ppassport_time >=", value, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeLessThan(Date value) {
            addCriterion("ppassport_time <", value, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeLessThanOrEqualTo(Date value) {
            addCriterion("ppassport_time <=", value, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeIn(List<Date> values) {
            addCriterion("ppassport_time in", values, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeNotIn(List<Date> values) {
            addCriterion("ppassport_time not in", values, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeBetween(Date value1, Date value2) {
            addCriterion("ppassport_time between", value1, value2, "ppassportTime");
            return (Criteria) this;
        }

        public Criteria andPpassportTimeNotBetween(Date value1, Date value2) {
            addCriterion("ppassport_time not between", value1, value2, "ppassportTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tk_testpaper
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 23 12:38:48 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tk_testpaper
     *
     * @mbggenerated Wed Mar 23 12:38:48 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}