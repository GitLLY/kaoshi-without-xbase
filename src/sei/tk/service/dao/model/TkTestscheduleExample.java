package sei.tk.service.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TkTestscheduleExample {
    protected Integer start;    //∑÷“≥œ‡πÿ
    protected Integer row;

    public Integer getStart() {
        return start;
    }

    public void setStart(Integer start) {
        this.start = start;
    }

    public Integer getRow() {
        return row;
    }

    public void setRow(Integer row) {
        this.row = row;
    }


    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public TkTestscheduleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTestscheduleIdIsNull() {
            addCriterion("testschedule_id is null");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdIsNotNull() {
            addCriterion("testschedule_id is not null");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdEqualTo(Long value) {
            addCriterion("testschedule_id =", value, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdNotEqualTo(Long value) {
            addCriterion("testschedule_id <>", value, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdGreaterThan(Long value) {
            addCriterion("testschedule_id >", value, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("testschedule_id >=", value, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdLessThan(Long value) {
            addCriterion("testschedule_id <", value, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdLessThanOrEqualTo(Long value) {
            addCriterion("testschedule_id <=", value, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdIn(List<Long> values) {
            addCriterion("testschedule_id in", values, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdNotIn(List<Long> values) {
            addCriterion("testschedule_id not in", values, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdBetween(Long value1, Long value2) {
            addCriterion("testschedule_id between", value1, value2, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andTestscheduleIdNotBetween(Long value1, Long value2) {
            addCriterion("testschedule_id not between", value1, value2, "testscheduleId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdIsNull() {
            addCriterion("ppassport_id is null");
            return (Criteria) this;
        }

        public Criteria andPpassportIdIsNotNull() {
            addCriterion("ppassport_id is not null");
            return (Criteria) this;
        }

        public Criteria andPpassportIdEqualTo(Long value) {
            addCriterion("ppassport_id =", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdNotEqualTo(Long value) {
            addCriterion("ppassport_id <>", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdGreaterThan(Long value) {
            addCriterion("ppassport_id >", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ppassport_id >=", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdLessThan(Long value) {
            addCriterion("ppassport_id <", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdLessThanOrEqualTo(Long value) {
            addCriterion("ppassport_id <=", value, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdIn(List<Long> values) {
            addCriterion("ppassport_id in", values, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdNotIn(List<Long> values) {
            addCriterion("ppassport_id not in", values, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdBetween(Long value1, Long value2) {
            addCriterion("ppassport_id between", value1, value2, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andPpassportIdNotBetween(Long value1, Long value2) {
            addCriterion("ppassport_id not between", value1, value2, "ppassportId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdIsNull() {
            addCriterion("testpaper_id is null");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdIsNotNull() {
            addCriterion("testpaper_id is not null");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdEqualTo(Long value) {
            addCriterion("testpaper_id =", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdNotEqualTo(Long value) {
            addCriterion("testpaper_id <>", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdGreaterThan(Long value) {
            addCriterion("testpaper_id >", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdGreaterThanOrEqualTo(Long value) {
            addCriterion("testpaper_id >=", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdLessThan(Long value) {
            addCriterion("testpaper_id <", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdLessThanOrEqualTo(Long value) {
            addCriterion("testpaper_id <=", value, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdIn(List<Long> values) {
            addCriterion("testpaper_id in", values, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdNotIn(List<Long> values) {
            addCriterion("testpaper_id not in", values, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdBetween(Long value1, Long value2) {
            addCriterion("testpaper_id between", value1, value2, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestpaperIdNotBetween(Long value1, Long value2) {
            addCriterion("testpaper_id not between", value1, value2, "testpaperId");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeIsNull() {
            addCriterion("test_starttime is null");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeIsNotNull() {
            addCriterion("test_starttime is not null");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeEqualTo(Date value) {
            addCriterion("test_starttime =", value, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeNotEqualTo(Date value) {
            addCriterion("test_starttime <>", value, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeGreaterThan(Date value) {
            addCriterion("test_starttime >", value, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("test_starttime >=", value, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeLessThan(Date value) {
            addCriterion("test_starttime <", value, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeLessThanOrEqualTo(Date value) {
            addCriterion("test_starttime <=", value, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeIn(List<Date> values) {
            addCriterion("test_starttime in", values, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeNotIn(List<Date> values) {
            addCriterion("test_starttime not in", values, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeBetween(Date value1, Date value2) {
            addCriterion("test_starttime between", value1, value2, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestStarttimeNotBetween(Date value1, Date value2) {
            addCriterion("test_starttime not between", value1, value2, "testStarttime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeIsNull() {
            addCriterion("test_endtime is null");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeIsNotNull() {
            addCriterion("test_endtime is not null");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeEqualTo(Date value) {
            addCriterion("test_endtime =", value, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeNotEqualTo(Date value) {
            addCriterion("test_endtime <>", value, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeGreaterThan(Date value) {
            addCriterion("test_endtime >", value, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("test_endtime >=", value, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeLessThan(Date value) {
            addCriterion("test_endtime <", value, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("test_endtime <=", value, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeIn(List<Date> values) {
            addCriterion("test_endtime in", values, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeNotIn(List<Date> values) {
            addCriterion("test_endtime not in", values, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeBetween(Date value1, Date value2) {
            addCriterion("test_endtime between", value1, value2, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andTestEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("test_endtime not between", value1, value2, "testEndtime");
            return (Criteria) this;
        }

        public Criteria andCourseIdIsNull() {
            addCriterion("course_id is null");
            return (Criteria) this;
        }

        public Criteria andCourseIdIsNotNull() {
            addCriterion("course_id is not null");
            return (Criteria) this;
        }

        public Criteria andCourseIdEqualTo(Short value) {
            addCriterion("course_id =", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdNotEqualTo(Short value) {
            addCriterion("course_id <>", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdGreaterThan(Short value) {
            addCriterion("course_id >", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdGreaterThanOrEqualTo(Short value) {
            addCriterion("course_id >=", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdLessThan(Short value) {
            addCriterion("course_id <", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdLessThanOrEqualTo(Short value) {
            addCriterion("course_id <=", value, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdIn(List<Short> values) {
            addCriterion("course_id in", values, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdNotIn(List<Short> values) {
            addCriterion("course_id not in", values, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdBetween(Short value1, Short value2) {
            addCriterion("course_id between", value1, value2, "courseId");
            return (Criteria) this;
        }

        public Criteria andCourseIdNotBetween(Short value1, Short value2) {
            addCriterion("course_id not between", value1, value2, "courseId");
            return (Criteria) this;
        }

        public Criteria andStuScoreIsNull() {
            addCriterion("stu_score is null");
            return (Criteria) this;
        }

        public Criteria andStuScoreIsNotNull() {
            addCriterion("stu_score is not null");
            return (Criteria) this;
        }

        public Criteria andStuScoreEqualTo(Short value) {
            addCriterion("stu_score =", value, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreNotEqualTo(Short value) {
            addCriterion("stu_score <>", value, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreGreaterThan(Short value) {
            addCriterion("stu_score >", value, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreGreaterThanOrEqualTo(Short value) {
            addCriterion("stu_score >=", value, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreLessThan(Short value) {
            addCriterion("stu_score <", value, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreLessThanOrEqualTo(Short value) {
            addCriterion("stu_score <=", value, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreIn(List<Short> values) {
            addCriterion("stu_score in", values, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreNotIn(List<Short> values) {
            addCriterion("stu_score not in", values, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreBetween(Short value1, Short value2) {
            addCriterion("stu_score between", value1, value2, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuScoreNotBetween(Short value1, Short value2) {
            addCriterion("stu_score not between", value1, value2, "stuScore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreIsNull() {
            addCriterion("stu_basescore is null");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreIsNotNull() {
            addCriterion("stu_basescore is not null");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreEqualTo(Short value) {
            addCriterion("stu_basescore =", value, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreNotEqualTo(Short value) {
            addCriterion("stu_basescore <>", value, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreGreaterThan(Short value) {
            addCriterion("stu_basescore >", value, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreGreaterThanOrEqualTo(Short value) {
            addCriterion("stu_basescore >=", value, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreLessThan(Short value) {
            addCriterion("stu_basescore <", value, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreLessThanOrEqualTo(Short value) {
            addCriterion("stu_basescore <=", value, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreIn(List<Short> values) {
            addCriterion("stu_basescore in", values, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreNotIn(List<Short> values) {
            addCriterion("stu_basescore not in", values, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreBetween(Short value1, Short value2) {
            addCriterion("stu_basescore between", value1, value2, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andStuBasescoreNotBetween(Short value1, Short value2) {
            addCriterion("stu_basescore not between", value1, value2, "stuBasescore");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdIsNull() {
            addCriterion("create_ppassport_id is null");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdIsNotNull() {
            addCriterion("create_ppassport_id is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdEqualTo(Long value) {
            addCriterion("create_ppassport_id =", value, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdNotEqualTo(Long value) {
            addCriterion("create_ppassport_id <>", value, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdGreaterThan(Long value) {
            addCriterion("create_ppassport_id >", value, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdGreaterThanOrEqualTo(Long value) {
            addCriterion("create_ppassport_id >=", value, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdLessThan(Long value) {
            addCriterion("create_ppassport_id <", value, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdLessThanOrEqualTo(Long value) {
            addCriterion("create_ppassport_id <=", value, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdIn(List<Long> values) {
            addCriterion("create_ppassport_id in", values, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdNotIn(List<Long> values) {
            addCriterion("create_ppassport_id not in", values, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdBetween(Long value1, Long value2) {
            addCriterion("create_ppassport_id between", value1, value2, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreatePpassportIdNotBetween(Long value1, Long value2) {
            addCriterion("create_ppassport_id not between", value1, value2, "createPpassportId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tk_testschedule
     *
     * @mbggenerated do_not_delete_during_merge Fri Mar 25 12:43:32 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tk_testschedule
     *
     * @mbggenerated Fri Mar 25 12:43:32 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}